#!/system/bin/sh
# load the chroot environment

rootPartition="/dev/block/mmcblk0p2"

crHome="/sdcard/mnt/cr"
crHomeWithoutMountPoint=$(echo $crhome | cut -d/ -f3-) # TODO think of a better way

extraMountDirs="sys proc sdcard data"
extraMounts="$extraMountDirs dev dev/pts"
extraUnmounts="$extraMountDirs dev/pts dev"

vncNumber=1
vncResolution="3200x1800"


function essentials
{
  echo -n "$crHome  "
  if ! isMounted "$crHome";  then
    echo "mount."
    mount "$rootPartition" "$crHome"
  else
    echo "skipped."
  fi
}

function unessentials
{
  echo -n "$crHome  "
  if isMounted "$crhome";  then
    echo "unmount."
    umount $crHome 
  else
    echo "skipped."
  fi
}

function isMounted
{
  dst="$1"  
  isThereStuff=$(ls $dst | wc -l 2>/dev/null)
  
  if [ "$isThereStuff" -gt 0 ]; then
    return 0
  else
    return 1
  fi
}

function isMounted2
{
  dst="`echo $1 | cut -d/ -f 3-`" 
  isThereStuff=$(mount | grep "$dst ")
  
  if [ "$isThereStuff" == "" ]; then
    return 1
  else
    return 0
  fi
}


function tryMount
{
  bindThing="$1"
  dst="$crHome/$bindThing"
  echo -n "  /$bindThing => $dst"
    
  if isMounted $dst; then
    echo " - skipping"
  else
    echo " - binding"
    mount -o bind /$bindThing $dst
  fi
}

function tryUnmount
{
  bindThing="$1"
  dst="$crHome/$bindThing"
  echo -n "  $dst"
    
  if isMounted $dst; then
    echo " - unbinding"
    umount "$dst"
  else
    echo " - skipping"
  fi
}


function mountExtras
{
  for fs in $extraMounts; do
    tryMount "$fs"
  done
}

function unmountExtras
{
  for fs in $extraUnmounts; do
    tryUnmount "$fs"
  done
}

function mountAll
{
  essentials
  mountExtras
}


function unmountAll
{
  unmountExtras
  unessentials
}


function getVNCLockFile
{
  echo $crHome/tmp/.X$vncNumber-lock
}

function getVNCPidFile
{
  echo $crHome/.vnc/localhost:$vncNumber.pid
}

function getVNCPid
{
  vncLockFile=`getVNCLockFile`
  if [ -e `getVNCLockFile` ];then
    sed 's/ *//g' "$vncLockFile"
  fi
}


function VNCLockExists
{
  [ -e `getVNCLockFile` ] || [ -e `getVNCPidFile`  ]
  return $?
}

function VNCProcessExists
{
  pid=`getVNCPid`
  
  kill -0 $pid 2>/dev/null
  return $?
}

function isVNCRunning
{
  if VNCLockExists; then
    if VNCProcessExists; then
      return 0
    else
      return 1
    fi
  else
    return 1
  fi
}

function VNCStart
{
  echo -n "VNC start  "
  if VNCProcessExists; then
    echo "skipped."
  else
    if VNCLockExists; then
      echo "... lock still exists. Removing."
      VNCStop
    fi
    
    echo "VNC start  starting."
    export PATH=/bin:/sbin:/usr/bin:/usr/sbin:$PATH   
    hostname `cat $crHome/etc/hostname`  
    chroot "$crHome" vncserver -geometry "$vncResolution" :1
  fi
}

function VNCRemoveLock
{
  rm -Rf $crHome/tmp/.X$vncNumber-lock $crHome/tmp/.X11-unix/X$vncNumber $crHome/.vnc/localhost:$vncNumber.pid
}

function VNCStop
{
  echo -n "VNC stop  "
  if VNCLockExists; then
    echo "stopping."
    export PATH=/bin:/sbin:/usr/bin:/usr/sbin:$PATH    
    export HOME=/
    chroot "$crHome" vncserver -kill :1
    
    if VNCProcessExists; then
      echo "Whoops, VNC wasn't able to stop. A little self control may be required ;-)"
    else
      if VNCLockExists; then
	echo "The lock still exists, but the process doesn't. Removing."
        VNCRemoveLock
      fi
    fi
  else
    echo "skipped."
  fi
}


function showVNCStatus
{
  echo "VNC/desktop"
  vncLockFile=`getVNCLockFile`
  
  echo -n "	VNC lock on :$vncNumber ($vncLockFile)  "
  if VNCLockExists; then
    echo "Yes."
    echo -n "	Running  "
    if VNCProcessExists; then
      pid=$(getVNCPid)
      echo "Yes ($pid)."
    else
      echo "No."
    fi
  else
    echo "No."
  fi
}



function startCR
{
  export PATH=/bin:/sbin:/usr/bin:/usr/sbin:$PATH
  hostname `cat $crHome/etc/hostname`
  chroot "$crHome" bash -
}


function status
{
  mountStatus
  showVNCStatus
}


function mountStatus
{
  echo -n "$crHome  "
  if isMounted2 "$crHome "; then
    echo "mounted"
  else
    echo "not mounted"
  fi
  
  for fs in $extraMounts; do
    echo -n "	$fs  "
    if isMounted2 "$crHome/$fs"; then
      echo "mounted"
    else
      echo "not mounted"
    fi
  done
}

function showHelp {
  grep "^  *\".*#" $1 | sed 's/") #/	/g;s/^ *"//g'
}



case $1 in
  "start") # Start chroot and all necessary dependancies.
    mountAll
    startCR
  ;;
  "stop") # Stop chroot and all necessary dependencies.
    unmountAll
  ;;
  "startVNC") # Start VNC and all necessary dependancies.
    mountAll
    VNCStart
  ;;
  "stopVNC") # Stop VNC.
    VNCStop
  ;;
  "status") # Show the status of everything we know about.
    status
  ;;
  *)
    showHelp "$0"
  ;;
esac
